{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj\\\\cinemize\\\\src\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport simple from './assets/simple.json';\nimport Discover from './components/Discover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const random_page = 1 + Math.random() * (100 - 1);\n  const [movielist, setMovielist] = useState([]);\n  const fetchmovie = async () => {\n    const API_URL_POP = `https://api.themoviedb.org/3/movie/popular?api_key=dc6c9756c455e1b3b3f8d3b91062b234&language=en-US&page=3`;\n    const popular_response = await fetch(API_URL_POP);\n    const popular_response_json = await popular_response.json();\n    if (popular_response_json.results) {\n      setMovielist(popular_response_json.results);\n    }\n  };\n  useEffect(() => {\n    fetchmovie(random_page);\n  }, [random_page]);\n  const [searchmovie, setSearchmovie] = useState('');\n  const handleSearchmovie = e => {\n    setSearchmovie(e.target.value);\n  };\n  const fetchResults = async searchmovie => {\n    const API_URL_SEARCH = `https://api.themoviedb.org/3/search/movie?api_key=dc6c9756c455e1b3b3f8d3b91062b234&language=en-US&query=${searchmovie}`;\n    const response = await fetch(API_URL_SEARCH);\n    const responseJson = await response.json();\n    if (responseJson.results) {\n      setSearchResults(responseJson.results);\n    }\n  };\n  useEffect(() => {\n    fetchResults(searchmovie);\n  }, [searchmovie]);\n  const [searchresults, setSearchResults] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-seg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchmovie,\n        onChange: handleSearchmovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Discover, {\n        movieslist: searchresults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Discover, {\n        movieslist: movielist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"v3l9mtIkWxFlRvKUcWja0yxTaQo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","simple","Discover","jsxDEV","_jsxDEV","Home","_s","random_page","Math","random","movielist","setMovielist","fetchmovie","API_URL_POP","popular_response","fetch","popular_response_json","json","results","searchmovie","setSearchmovie","handleSearchmovie","e","target","value","fetchResults","API_URL_SEARCH","response","responseJson","setSearchResults","searchresults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","movieslist","_c","$RefreshReg$"],"sources":["D:/proj/cinemize/src/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport simple from './assets/simple.json';\r\nimport Discover from './components/Discover';\r\n\r\nexport default function Home() {\r\n\r\n    const random_page = 1+(Math.random()*(100-1));\r\n    const [movielist, setMovielist] = useState([]);\r\n    const fetchmovie = async () => {\r\n        const API_URL_POP = `https://api.themoviedb.org/3/movie/popular?api_key=dc6c9756c455e1b3b3f8d3b91062b234&language=en-US&page=3`\r\n        const popular_response = await fetch(API_URL_POP);\r\n        const popular_response_json = await popular_response.json();\r\n        if (popular_response_json.results){\r\n            setMovielist(popular_response_json.results);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchmovie(random_page)\r\n    }, [random_page])\r\n\r\n    const [searchmovie, setSearchmovie] = useState('');\r\n    const handleSearchmovie = (e) => {\r\n        setSearchmovie(e.target.value);\r\n    }\r\n\r\n    const fetchResults = async (searchmovie) => {\r\n        const API_URL_SEARCH = `https://api.themoviedb.org/3/search/movie?api_key=dc6c9756c455e1b3b3f8d3b91062b234&language=en-US&query=${searchmovie}`\r\n        const response = await fetch(API_URL_SEARCH);\r\n        const responseJson = await response.json();\r\n        if (responseJson.results){\r\n            setSearchResults(responseJson.results);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchResults(searchmovie);\r\n    },[searchmovie])\r\n\r\n    const [searchresults, setSearchResults] = useState([]);\r\n\r\n\r\n    return (\r\n        <div className='home-cont'>\r\n            <div className='nav-seg'>\r\n                <h2>Title</h2>\r\n                <input type='text' value={searchmovie} onChange={handleSearchmovie} />\r\n            </div>\r\n            <div>\r\n                <Discover movieslist={searchresults}/>\r\n            </div>\r\n            <div>\r\n                <Discover movieslist={movielist} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}